version: '3.8'

services:
  # PostgreSQL сервис
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    volumes:
      - postgres_data:/var/lib/postgresql/data

  # Redis сервис
  redis:
    image: redis:7.0
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - app_network

  # Flask-приложение
  web:
    build:
      context: ./backend
      dockerfile: Dockerfile
    environment:
      - FLASK_APP=run.py
      - FLASK_ENV=${FLASK_ENV}
      - DATABASE_URL=${DATABASE_URL}
      - SECRET_KEY=${SECRET_KEY}
      - DEBUG=${DEBUG}
      - REDIS_URL=${REDIS_URL}
    ports:
      - "5500:5000"
    depends_on:
      - postgres
      - redis

  # Celery сервис
  celery:
    build:
      context: .
      dockerfile: ./celery/Dockerfile
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - DATABASE_URL=${DATABASE_URL}
      - REDIS_URL=${REDIS_URL}
    depends_on:
      - redis
      - postgres

  # Frontend (React)
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "80:80"
    depends_on:
      - web

volumes:
  postgres_data:
  redis_data:

networks:
  app_network: